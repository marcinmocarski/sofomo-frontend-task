{"version":3,"sources":["reportWebVitals.js","api/endpoints.js","components/LocationMap/LocationMap.js","components/SearchBar/SearchBar.js","components/SearchList/SearchList.js","components/LocationInfo/LocationInfo.js","components/App/App.utils.js","components/App/App.js","components/LocationInfo/LocationInfo.constants.js","components/_containers/AppContainer/AppContainer.js","reducers/searchListReducer.js","reducers/userLocationInfoReducer.js","reducers/currentLocationInfoReducer.js","reducers/rootReducer.js","store.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","IP_ADDRESS_GEOLOCATION_API_URL","GoogleApiWrapper","apiKey","process","props","cords","google","initialCenter","lat","latitude","lng","longitude","center","zoom","style","width","height","useStyles","makeStyles","theme","root","display","paper","flex","marginRight","spacing","input","marginLeft","button","SearchBar","searchHandler","inputElement","useRef","classess","searchClickHandler","value","current","className","Paper","InputBase","inputRef","placeholder","IconButton","onClick","Button","variant","backgroundColor","palette","background","header","padding","paddingBottom","listItemText","overflow","textOverflow","whiteSpace","SearchList","dispatch","useDispatch","searchList","useSelector","state","listItems","map","item","index","Divider","ListItem","type","payload","ListItemIcon","ListItemText","primary","ip","Typography","component","color","List","card","title","fontSize","LocationInfo","info","city","country_name","Card","CardContent","gutterBottom","getCords","locationInfo","undefined","App","userLocationInfo","store","currentLocationInfo","userCords","currentCords","AppContainer","useState","isErrorAlertOpen","setIsErrorAlertOpen","useEffect","fetchPublicIPAddress","fetch","response","json","data","fetchLocation","isUserLocationInfo","catch","error","Snackbar","open","anchorOrigin","vertical","horizontal","severity","onClose","searchListReducer","action","userLocationInfoReducer","currentLocationInfoReducer","rootReducer","combineReducers","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f656d53.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const IP_ADDRESS_API_URL = \"https://api.ipify.org/?format=json\";\r\nexport const IP_ADDRESS_GEOLOCATION_API_URL = \"https://freegeoip.app/json/\";","\r\nimport { Map, GoogleApiWrapper } from 'google-maps-react';\r\n\r\nconst {REACT_APP_GOOGLE_MAPS_API_KEY} = process.env;\r\n\r\nconst LocationMap = (props) => {\r\n\r\n    const {cords} = props;\r\n    const mapStyles = {\r\n        width: \"100%\",\r\n        height: \"100$\"\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Map\r\n                google={props.google}\r\n                initialCenter={{\r\n                    lat: cords.latitude,\r\n                    lng: cords.longitude\r\n                }}\r\n                center={{\r\n                    lat: cords.latitude,\r\n                    lng: cords.longitude\r\n                }}\r\n                zoom={13}\r\n                style={mapStyles}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n    apiKey: REACT_APP_GOOGLE_MAPS_API_KEY\r\n})(LocationMap);","import {useRef} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: \"flex\"\r\n    },\r\n    paper: {\r\n        display: \"flex\",\r\n        flex: 1,\r\n        marginRight: theme.spacing(3)\r\n    },\r\n    input: {\r\n        marginLeft: theme.spacing(1),\r\n        flex: 1\r\n    },\r\n    button: {\r\n        flex: 0.1\r\n    }\r\n}));\r\n\r\nconst SearchBar = ({searchHandler = () => {}}) => {\r\n    const inputElement = useRef(null);\r\n    const classess = useStyles();\r\n\r\n    const searchClickHandler = () => {\r\n        const {value} = inputElement.current;\r\n        searchHandler(value);\r\n    }\r\n\r\n    return (\r\n        <div className={classess.root}>\r\n            <Paper className={classess.paper}>\r\n                <InputBase\r\n                    inputRef={inputElement}\r\n                    className={classess.input}\r\n                    placeholder=\"Enter valid IP address or url...\"\r\n                />\r\n                <IconButton onClick={searchClickHandler}>\r\n                    <SearchIcon />\r\n                </IconButton>\r\n            </Paper >\r\n            <Button className={classess.button} variant=\"contained\" onClick={searchClickHandler}>\r\n                {\"Search\"}\r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBar;","import { useSelector, useDispatch } from 'react-redux';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MyLocationIcon from '@material-ui/icons/MyLocation';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        height: \"100%\"\r\n    },\r\n    header: {\r\n        padding: theme.spacing(1),\r\n        paddingBottom: 0\r\n    },\r\n    listItemText: {\r\n        overflow: \"hidden\",\r\n        textOverflow: \"ellipsis\",\r\n        whiteSpace: \"nowrap\"\r\n    }\r\n}));\r\n\r\n\r\nconst SearchList = () => {\r\n    const classess = useStyles();\r\n    const dispatch = useDispatch();\r\n    const searchList = useSelector(state => state.searchList);\r\n    const listItemClickHandler = searchListItem => {\r\n        dispatch({\r\n            type: 'currentLocationInfo/set',\r\n            payload: searchListItem\r\n        })\r\n    };\r\n    const listItems = searchList.map((item, index) => (\r\n        <div key={index}>\r\n            <Divider />\r\n            <ListItem button onClick={() => { listItemClickHandler(item) }}>\r\n                <ListItemIcon>\r\n                    <MyLocationIcon />\r\n                </ListItemIcon>\r\n                <ListItemText className={classess.listItemText} primary={item.ip} />\r\n            </ListItem>\r\n        </div>\r\n    ));\r\n\r\n    return (\r\n        <div className={classess.root}>\r\n            <Typography className={classess.header} variant=\"h5\" component=\"h2\" color=\"textSecondary\">\r\n                Recent searches\r\n            </Typography>\r\n            <List component=\"nav\">\r\n                {listItems}\r\n            </List>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchList;","import Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        height: '100%'\r\n    },\r\n    card: {\r\n        height: '100%',\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n    }\r\n});\r\n\r\nconst LocationInfo = ({ info, title }) => {\r\n    const {ip, city, country_name} = info;\r\n    const classess = useStyles();\r\n\r\n    return (\r\n        <div className={classess.root}>\r\n            <Card className={classess.card}>\r\n                <CardContent>\r\n                    <Typography className={classess.title} color=\"textSecondary\" gutterBottom>\r\n                        {title}\r\n                    </Typography>\r\n                    <Typography variant=\"h5\" component=\"p\">\r\n                        {ip}\r\n                    </Typography>\r\n                    <Typography variant=\"h5\" component=\"p\">\r\n                        {city}\r\n                    </Typography>\r\n                    <Typography variant=\"h5\" component=\"p\">\r\n                        {country_name}\r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LocationInfo;","export const getCords = (locationInfo) => {\r\n    const { latitude, longitude } = locationInfo;\r\n    if(latitude !== undefined && longitude !== undefined) {\r\n        return {\r\n            latitude,\r\n            longitude\r\n        }\r\n    } else {\r\n        return {\r\n            latitude: 0,\r\n            longitude: 0\r\n        }\r\n    }\r\n}\r\n","import { useSelector } from 'react-redux';\nimport './App.scss';\nimport LocationMap from '../LocationMap/LocationMap';\nimport SearchBar from '../SearchBar/SearchBar';\nimport SearchList from '../SearchList/SearchList';\nimport LocationInfo from '../LocationInfo/LocationInfo';\nimport { USER_LOCATION_INFO_TITLE, CURRENT_LOCATION_INFO_TITLE } from '../LocationInfo/LocationInfo.constants';\nimport { getCords } from './App.utils';\n\nconst App = ({\n  searchHandler\n}) => {\n  const searchList = useSelector(store => store.searchList) || [];\n  const userLocationInfo = useSelector(store => store.userLocationInfo) || {};\n  const currentLocationInfo = useSelector(store => store.currentLocationInfo) || {};\n  const userCords = getCords(userLocationInfo);\n  const currentCords = getCords(currentLocationInfo);\n\n  return (\n    <div className=\"App\">\n      <div className=\"allSearchesListContainer\">\n        <SearchList />\n      </div>\n      <div className=\"userLocationMapContainer\">\n        <LocationMap cords={userCords} />\n      </div>\n      <div className=\"userLocationInfoContainer\">\n        <LocationInfo\n          info={userLocationInfo}\n          title={USER_LOCATION_INFO_TITLE}\n        />\n      </div>\n      <div className=\"searchBoxContainer\">\n        <SearchBar\n          searchHandler={searchHandler} />\n      </div>\n      <div className=\"lastSearchLocationMapContainer\">\n        <LocationMap cords={currentCords} />\n      </div>\n      <div className=\"lastSearchInfoContainer\">\n        <LocationInfo\n          info={currentLocationInfo}\n          title={CURRENT_LOCATION_INFO_TITLE}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","export const USER_LOCATION_INFO_TITLE = \"Your location\";\r\nexport const CURRENT_LOCATION_INFO_TITLE = \"Searched location\";","import { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { IP_ADDRESS_GEOLOCATION_API_URL, IP_ADDRESS_API_URL } from '../../../api/endpoints';\r\nimport Snackbar  from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport App from '../../App/App'\r\n\r\nconst { REACT_APP_IP_ADDRESS_GEOLOCATION_API_KEY } = process.env;\r\n\r\nconst AppContainer = () => {\r\n    const [isErrorAlertOpen, setIsErrorAlertOpen] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        fetchPublicIPAddress();\r\n    }, [])\r\n\r\n    const fetchPublicIPAddress = () => {\r\n        fetch(IP_ADDRESS_API_URL)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (data.ip) {\r\n                    fetchLocation(data.ip, true);\r\n                } else {\r\n                    setIsErrorAlertOpen(true);\r\n                }\r\n            })\r\n    }\r\n    const fetchLocation = (value, isUserLocationInfo = false) => {\r\n        fetch(`${IP_ADDRESS_GEOLOCATION_API_URL}/${value}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (data && data.latitude && data.longitude) {\r\n                    if(isUserLocationInfo) {\r\n                        dispatch({\r\n                            type: 'userLocationInfo/set',\r\n                            payload: data\r\n                        });\r\n                    } else {\r\n                        dispatch({\r\n                            type: 'searchList/added',\r\n                            payload: data\r\n                        });\r\n                        dispatch({\r\n                            type: 'currentLocationInfo/set',\r\n                            payload: data\r\n                        });\r\n                    }\r\n                } else {\r\n                    setIsErrorAlertOpen(true);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                setIsErrorAlertOpen(true);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <App searchHandler={fetchLocation} />\r\n            <Snackbar open={isErrorAlertOpen} anchorOrigin={{vertical: 'top', horizontal: 'center'}}>\r\n                <MuiAlert  variant=\"filled\" severity=\"error\" onClose={() => setIsErrorAlertOpen(false)}>\r\n                    Error while fetching location. Please make sure you provide valid IP address or url.\r\n                </MuiAlert>\r\n            </Snackbar>\r\n        </>)\r\n}\r\n\r\nexport default AppContainer;","const searchListReducer = (state = [], action) => {\r\n    switch(action.type) {\r\n        case 'searchList/added': {\r\n            return [\r\n                ...state,\r\n                action.payload\r\n            ]\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\n\r\nexport default searchListReducer;","const userLocationInfoReducer = (state = null, action) => {\r\n    switch(action.type) {\r\n        case 'userLocationInfo/set': {\r\n            return action.payload\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\n\r\nexport default userLocationInfoReducer;","const currentLocationInfoReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case 'currentLocationInfo/set': {\r\n            return action.payload\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\n\r\nexport default currentLocationInfoReducer;","import { combineReducers } from 'redux';\r\nimport searchListReducer from './searchListReducer';\r\nimport userLocationInfoReducer from './userLocationInfoReducer';\r\nimport currentLocationInfoReducer from './currentLocationInfoReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    searchList: searchListReducer,\r\n    userLocationInfo: userLocationInfoReducer,\r\n    currentLocationInfo: currentLocationInfoReducer\r\n});\r\n\r\nexport default rootReducer;","import { createStore } from 'redux';\r\nimport rootReducer from './reducers/rootReducer';\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport reportWebVitals from './reportWebVitals';\nimport 'fontsource-roboto';\nimport AppContainer from './components/_containers/AppContainer/AppContainer';\nimport store from './store';\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <AppContainer />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}